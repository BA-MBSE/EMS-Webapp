mms-view {
  .view-title {
    font-family: $light-font-family-sans-serif;
    font-weight: $light_font_weight;
    font-size: 35px;
    margin-top: 20px;
    margin-bottom: 15px;
  }

  table {
    @extend .content-table;
  }
  
  .tsDrawingView table {
    border-collapse: separate;
    border-spacing: 0;
    border: none;
    margin:0;
    width: auto;
    background:transparent;
  }
  
  .tsDrawingView td,
  .tsDrawingView th {
    padding: 0;
    border: none;
  }


/******************************************************************************
 * Table view styles.
 */

/* A table view. */
.tsTableView
{
	border-spacing: 0;
}

/* The first column in a table. */
.tsTableFirstColumn
{
}

/* The last row in a table. */
.tsTableLastColumn
{
}

/* The header in a table. */
.tsTableHeader
{
	padding: 0 2px;
	border: none;
	border-bottom: 1px solid #CCCC99;
	border-right: 1px solid #CCCC99;
	font-family: Arial Unicode MS,Arial,sans-serif;
	font-size: 85%;
	font-weight: normal;
	white-space: nowrap;
	color: #003366;
	background-color: #DDDDBB;
	text-align: left;
	overflow: hidden;
	height: 19px; /* Container has hardcoded 20px min height */
	vertical-align: bottom;
}

/* The footer in a table. */
.tsTableFooter
{
}

/* A table cell. */
.tsTableCell
{
	padding: 2px;
	font-family: Arial Unicode MS,Arial,sans-serif;
	font-size: 85%;
	font-weight: normal;
	white-space: nowrap;
	color: #000000;
	border: 0px solid transparent;
	border-bottom: 1px solid #CCCC99;
	border-right: 1px solid #CCCC99;
	overflow: hidden;
}

/* An input field in a table cell. */
.tsTableCell input[type="text"]
{
	font-family: Arial Unicode MS,Arial,sans-serif;
	font-size: 100%;
	font-weight: normal;
	border: 1px solid #B0B09E;
	width: 100%;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	padding: 0px;
}

/* The footer in the first column in a table. */
.tsTableFirstColumnFooter
{
}

/* The header in the first column in a table. */
.tsTableFirstColumnHeader
{
}

/* The footer in the last column in a table. */
.tsTableLastColumnFooter
{
}

/* The header in the last column in a table. */
.tsTableLastColumnHeader
{
}

/* A header that supports sorting in a table view. */
.tsTableSortableHeader
{
	cursor: pointer;
	cursor: hand;
}

/* A hover effect for headers that support sorting. */
.tsTableSortableHeader:hover
{
}

/* A column header that is sorted in ascending order in a table. */
.tsTableSortedHeaderAscending
{
}

/* A column header that is sorted in descending order in a table. */
.tsTableSortedHeaderDescending
{
}

/* An even row in a table. */
.tsTableEvenRow
{
}

/* A cell of an even row in a table. */
.tsTableEvenRowCell
{
}

/* An odd row in a table. */
.tsTableOddRow
{
}

/* A cell of an odd row in a table. */
.tsTableOddRowCell
{
}

/* A table row that is being hovered. */
.tsTableHoveredRow
{
}

/* A cell in a table row that is being hovered. */
.tsTableHoveredRowCell
{
}

/* A table cell row selected with the keyboard. */
.tsTableKeyboardSelectedRow
{
	background: #f9f9c6;
	color: white;
	height: auto;
	overflow: auto;
}

/* A table cell selected with the keyboard in a table row that has been selected
    using the keyboard. */
.tsTableKeyboardSelectedRowCell
{
}

/* A table cell selected with the keyboard. */
.tsTableKeyboardSelectedCell
{
	border: 1px dotted #999966;
	border-bottom: 1px solid #999966;
}

/* A selected table row. */
.tsTableSelectedRow
{
	background: #3399FF;
	color: #FFFFFF;
}

/* A table cell in a selected table row. */
.tsTableSelectedRowCell
{
}

/* A cell selected with the keyboard within a selected table row that may or may
   not have been selected using the keyboard. */
.tsTableSelectedRowCell.tsTableKeyboardSelectedCell
{
	border: 1px dotted #CCCC99;
	border-bottom: 1px solid #CCCC99;
}

/* A highlighted row in a table. */
.tsTableHighlightedRow
{
	background: #FBFBBF;
}

/* A cell in a highlighted row in a table. */
.tsTableHighlightedRowCell
{
}

/* A color element rendered within a table cell. */
.tsTableColorElement
{
	border: 1px solid #000;
	margin: 3px 1px 3px 1px;
	height: 7px;
}

/* An image element rendered within a table cell. */
.tsTableImageElement
{
	margin-left: auto;
	margin-right: auto;
	display: block;
}

/* A string element rendered within a table cell. */
.tsTableStringElement
{
	overflow: hidden;
	text-overflow: ellipsis;
}

/* An integer element rendered within a table cell. */
.tsTableIntegerElement
{
	overflow: hidden;
	text-overflow: ellipsis;
}

/* A number rendered within a table cell. */
.tsTableNumberElement
{
	text-overflow: ellipsis;
}

/* A combo box rendered within a table cell. */
.tsTableComboElement
{
	font-size: 100%;
	width: 100%;
	height: 100%;
	margin: -1px 0;
	text-overflow: ellipsis;
}

/* An edit box for tree and table cell editors. */
.tsCell input[type="text"].gwt-TextBox
{
	font-family: Arial Unicode MS, Arial, sans-serif;
	font-size: 85%;
	font-weight: normal;
	border: 1px solid #b0b09e;
	padding: 0px;
}


/******************************************************************************
 * Tree view styles.
 */

/* A tree view. */
.tsTree table
{
	border-collapse: collapse;
	cell-spacing: 0px;
	border-spacing: 0px;
}

/* A selected item within a tree. */
.tsTree .tsTreeSelectedItem
{
	background: #eee;
}

/* A highlighted item within a tree. */
.tsTree .tsTreeHighlightedItem
{
	background: #bde;
}

/* An unselected, unhighlighted item within a tree. */
.tsTreeDefaultItem
{
	background: #fff;
}

/* A color element rendered within a tree. */
.tsTreeNodeColorElement
{
	border: 1px solid #000;
	width: 40px;
	height: 8px;
}

/* A combo box item within a tree. */
.tsTreeComboBoxItem
{
	font-size: 85%;
}

/* A GWT label or HTML element within a tree. */
.tsTree .gwt-Label,
.tsTree .gwt-HTML
{
	font-size: 85%;
}


/****************************************************************************** 
 * Drawing view styles.
 */

/* A container panel for a drawing view. */
.tsViewClient
{
	border: 1px solid #cccc99;
}

/* A container panel for a layout progress bar. */
.tsProgressPanel
{
	border: 1px ridge gray;
	background-color: #efefef;
}

/* A progress indicator. */
.tsProgressIndicator
{
	border: 0px;
	background-color: transparent;
}

/* The button text in a layout cancel dialog box. */
td.tsLayoutCancelButtonText
{
	color: #003366;
	font-size: 85%;
	font-weight: normal;
	height: 14px;
}

/* A tooltip. */
.tsTooltip
{
	border: 1px solid #B0B0B0;
	background-color: #F0F0F0;
	font: normal 8pt sans-serif;
	padding: 2px 6px;
	-moz-box-shadow: 0px 4px 4px rgba(176, 176, 176, 0.5);
	-webkit-box-shadow: 0px 4px 4px rgba(176, 176, 176, 0.5);
	box-shadow: 0px 4px 4px rgba(176, 176, 176, 0.5);
	z-index: 10001;
}

/* The popup panel that holds a tooltip. */
.tsTooltipPanel
{
	border: 0px;
	padding: 0px;
	background-color: transparent;
}

/* A print preview window after the page has loaded. */
body.tsPrintPreview
{
	min-width: 100%;
	min-height: 100%;
	overflow: auto;
	padding-top: 1px;
	margin-top: -1px;
	padding-left: 1px;
	margin-left: -1px;
}

/* A print preview window before the page has loaded. */
body.tsPrintPreview-beforeLoad
{
	display: none;
}

/* An image within a print preview window. */
body.tsPrintPreview img
{
	outline: 1px solid black;
	display: block;
	page-break-inside: avoid;
}

/* An image within a Print Preview window that is not the last image on the 
   page. */
body.tsPrintPreview img.notLastImage
{
	page-break-after: always;
}

/* A marquee selection box. */
.tsMarqueeImg
{
	border: 1px dashed #707070;
}

/* The image shown by an At Tool on the image map canvas. */
.tsNodeImg
{
	border: 1px solid #FF0000;
}

/* The end point shown by a Between Tool on the image map canvas. */
.tsDummyEnd
{
	border: 1px solid #FF0000;
	background-color: #FF0000;
	width: 5px;
	height: 5px;
	z-Index: 100;
}


/******************************************************************************
 * Overview Panel styles.
 *
 * bottomRight, bottomLeft, topRight, and topLeft are dependent styles
 * that correspond to the possible placements of the overview panel. Borders
 * and icons vary based on panel placement.
 */

/* A container for a drawing canvas overview component. */
.tsOverviewPanel
{
	background-color: #FFFFFF;
	position: absolute;
}

/* An overview panel placed in the bottom right of the drawing canvas. */
.tsOverviewPanel-bottomRight
{
	border-top: 1px solid #b0b09e;
	border-left: 1px solid #b0b09e;
}

/* An overview panel placed in the bottom left of the drawing canvas. */
.tsOverviewPanel-bottomLeft
{
	border-top: 1px solid #b0b09e;
	border-right: 1px solid #b0b09e;
}

/* An overview panel placed in the top right of the drawing canvas. */
.tsOverviewPanel-topRight
{
	border-bottom: 1px solid #b0b09e;
	border-left: 1px solid #b0b09e;
}

/* An overview panel placed in the top left of the drawing canvas. */
.tsOverviewPanel-topLeft
{
	border-bottom: 1px solid #b0b09e;
	border-right: 1px solid #b0b09e;
}

/* The close button for an overview panel. */
.tsSecondaryWindowCloseButton
{
	padding: 0px;
	cursor: pointer;
	width: 10px;
	height: 10px;
	background: url("../Basic/tsperspectives/images/cross.png");
}

/* The close button for an overview panel placed in the bottom right of the 
   drawing canvas. */
.tsSecondaryWindowCloseButton-bottomRight
{
	border-bottom: 1px solid #b0b09e;
	border-left: 1px solid #b0b09e;
}

/* The close button for an overview panel placed in the bottom left of the 
   drawing canvas. */
.tsSecondaryWindowCloseButton-bottomLeft
{
	border-bottom: 1px solid #b0b09e;
	border-right: 1px solid #b0b09e;
}

/* The close button for an overview panel placed in the top left of the drawing
   canvas. */
.tsSecondaryWindowCloseButton-topLeft
{
	border-bottom: 1px solid #b0b09e;
	border-right: 1px solid #b0b09e;
}

/* The close button for an overview panel placed in the top right of the drawing
   canvas. */
.tsSecondaryWindowCloseButton-topRight
{
	border-bottom: 1px solid #b0b09e;
	border-left: 1px solid #b0b09e;
}

/* The resize button that displays when the user hovers over a corner of the overview
   window. */
.tsOverviewResizeButton
{
	border: 0px;
	padding: 0px;
	width: 10px;
	height: 10px;
}

/* The resize button for an overview panel placed in the bottom right of the drawing
   canvas. */
.tsOverviewResizeButton-bottomRight
{
	cursor: nw-resize;
	background: url("../Basic/tsperspectives/images/resize.nw.png");
}

/* The resize button for an overview panel placed in the bottom left of the drawing
   canvas. */
.tsOverviewResizeButton-bottomLeft
{
	cursor: ne-resize;
	background: url("../Basic/tsperspectives/images/resize.ne.png");
}

/* The resize button for an overview panel placed in the top left of the drawing
   canvas. */
.tsOverviewResizeButton-topLeft
{
	cursor: se-resize;
	background: url("../Basic/tsperspectives/images/resize.se.png");
}

/* The resize button for an overview panel placed in the top right of the drawing
   canvas. */
.tsOverviewResizeButton-topRight
{
	cursor: sw-resize;
	background: url("../Basic/tsperspectives/images/resize.sw.png");
}

/* An overview marquee element that shows the current viewport in the drawing 
   canvas. */
.tsOverviewMarqueeImg
{
	border: 2px solid #5b8cc7;
}


/******************************************************************************
 * Drawing view tool cursor styles.
 */

/* The cursor specified by the pan tool. */
.tsPan
{
	cursor: url(../Basic/tsperspectives/images/OpenHand.cur),
		default;
}

/* The cursor specified by the pan tool while panning is taking place. */
.tsPanning
{
	cursor: url(../Basic/tsperspectives/images/ClosedHand.cur),
		pointer;
}

/* The cursor specified when moving objects in a drawing. */
.tsMoving
{
	cursor: url(../Basic/tsperspectives/images/ClassicMove.cur),
		pointer;
}

/* The cursor specified by the marquee zoom tool. */
.tsMarqueeZoom
{
	cursor: url(../Basic/tsperspectives/images/MarqueeZoom.cur),
		default;
}

/* The cursor specified by the link navigation tool. */
.tsLinkNavigation
{
	cursor: url(../Basic/tsperspectives/images/LinkNavigation.cur),
		default;
}

/* The cursor specified by the interactive zoom tool. */
.tsInteractiveZoom
{
	cursor: url(../Basic/tsperspectives/images/InteractiveZoom.cur),
		crosshair;
}

/* The cursor specified by the interactive zoom tool while zooming is taking
   place. */
.tsInteractiveZooming
{
	cursor: url(../Basic/tsperspectives/images/InteractiveZooming.cur),
		crosshair;
}

/* The cursor specified by the reconnect edge tool while reconnecting edge is taking
   place. */
.tsReconnect
{
	cursor: url(../Basic/tsperspectives/images/Reconnect.cur),
		crosshair;
}

/* The cursor specified by the transfer tool while transferring drawing element is taking
   place. */
.tsTransfer
{
	cursor: url(../Basic/tsperspectives/images/TransferSelected.cur),
		crosshair;
}

/* The cursor specified by the transfer tool while transferring drawing element is not
	possible. */
.tsInvalid
{
	cursor: url(../Basic/tsperspectives/images/Invalid.cur),
		crosshair;
}

/* The cursor specified when resizing the overview panel using the top left 
   corner. */
.tsResizingNE
{
	cursor: ne-resize;
}

/* The cursor specified when resizing the overview panel using the top right 
   corner. */
.tsResizingNW
{
	cursor: nw-resize;
}

/* The cursor specified when resizing the overview panel using the bottom left 
   corner. */
.tsResizingSE
{
	cursor: se-resize;
}

/* The cursor specified when resizing the overview panel using the bottom right 
   corner. */
.tsResizingSW
{
	cursor: sw-resize;
}

/* The cursor specified when resizing the overview panel using the top side. */
.tsResizingN
{
	cursor: n-resize;
	cursor: row-resize;
}

/* The cursor specified when resizing the overview panel using the left side. */
.tsResizingE
{
	cursor: e-resize;
	cursor: col-resize;
}

/* The cursor specified when resizing the overview panel using the bottom side. */
.tsResizingS
{
	cursor: s-resize;
	cursor: row-resize;
}

/* The cursor specified when resizing the overview panel using the right side. */
.tsResizingW
{
	cursor: w-resize;
	cursor: col-resize;
}

/* The cursor specified when using an At Tool on a drawing canvas. */
.tsAddAt
{
	cursor: url(../Basic/tsperspectives/images/AddNode.cur),
		default;
}

/* The cursor specified when using an At Tool on a drawing canvas and the action
   itself is being performed. */
.tsAddingAt
{
	cursor: url(../Basic/tsperspectives/images/AddingNode.cur),
		default;
}

/* The cursor specified when using a Between Tool on a drawing canvas. */
.tsAddBetween
{
	cursor: url(../Basic/tsperspectives/images/AddEdge.cur),
		default;
}

/* The cursor specified when the mouse is hovered over a composite UI action element. */
.tsElementAction
{
	cursor: pointer;
}

/******************************************************************************
* Drawing view tool cursor styles for IE browsers.
*/

/* The cursor specified by the pan tool. */
.ie.tsPan
{
	cursor: url(../Basic/perspectivesviewer/images/OpenHand.cur),
		url(../Basic/tsperspectives/images/OpenHand.cur),
		default;
}

/* The cursor specified by the pan tool while panning is taking place. */
.ie.tsPanning
{
	cursor: url(../Basic/perspectivesviewer/images/ClosedHand.cur),
		url(../Basic/tsperspectives/images/ClosedHand.cur),
		pointer;
}

/* The cursor specified when moving objects in a drawing. */
.ie.tsMoving
{
	cursor: url(../Basic/perspectivesviewer/images/ClassicMove.cur),
		url(../Basic/tsperspectives/images/ClassicMove.cur),
		pointer;
}

/* The cursor specified by the marquee zoom tool. */
.ie.tsMarqueeZoom
{
	cursor: url(../Basic/perspectivesviewer/images/MarqueeZoom.cur),
		url(../Basic/tsperspectives/images/MarqueeZoom.cur),
		default;
}

/* The cursor specified by the link navigation tool. */
.ie.tsLinkNavigation
{
	cursor: url(../Basic/perspectivesviewer/images/LinkNavigation.cur),
		url(../Basic/tsperspectives/images/LinkNavigation.cur),
		default;
}

/* The cursor specified by the interactive zoom tool. */
.ie.tsInteractiveZoom
{
	cursor: url(../Basic/perspectivesviewer/images/InteractiveZoom.cur),
		url(../Basic/tsperspectives/images/InteractiveZoom.cur),
		crosshair;
}

/* The cursor specified by the interactive zoom tool while zooming is taking
   place. */
.ie.tsInteractiveZooming
{
	cursor: url(../Basic/perspectivesviewer/images/InteractiveZooming.cur),
		url(../Basic/tsperspectives/images/InteractiveZooming.cur),
		crosshair;
}

/* The cursor specified by the reconnect edge tool while reconnecting edge is taking
   place. */
.ie.tsReconnect
{
	cursor: url(../Basic/perspectivesviewer/images/Reconnect.cur),
		url(../Basic/tsperspectives/images/Reconnect.cur),
		crosshair;
}

/* The cursor specified by the transfer tool while transferring drawing element is taking
   place. */
.ie.tsTransfer
{
	cursor: url(../Basic/perspectivesviewer/images/TransferSelected.cur),
		url(../Basic/tsperspectives/images/TransferSelected.cur),
		crosshair;
}

/* The cursor specified by the transfer tool while transferring drawing element is not
	possible. */
.ie.tsInvalid
{
	cursor:  url(../Basic/perspectivesviewer/images/Invalid.cur),
		url(../Basic/tsperspectives/images/Invalid.cur),
		crosshair;
}

/* The cursor specified when using an At Tool on a drawing canvas. */
.ie.tsAddAt
{
	cursor: url(../Basic/perspectivesviewer/images/AddNode.cur),
		url(../Basic/tsperspectives/images/AddNode.cur),
		default;
}

/* The cursor specified when using an At Tool on a drawing canvas and the action
   itself is being performed. */
.ie.tsAddingAt
{
	cursor: url(../Basic/perspectivesviewer/images/AddingNode.cur),
		url(../Basic/tsperspectives/images/AddingNode.cur),
		default;
}

/* The cursor specified when using a Between Tool on a drawing canvas. */
.ie.tsAddBetween
{
	cursor: url(../Basic/perspectivesviewer/images/AddEdge.cur),
		url(../Basic/tsperspectives/images/AddEdge.cur),
		default;
}

/* The cursor specified when the mouse is hovered over a composite UI action element. */
.ie.tsElementAction
{
	cursor: pointer;
}


/******************************************************************************
 * Menu/Toolbar styles.
 */

/* A context menu. */
.tsMenuBarItem
{
	background-color: white;
	font-weight: normal;
	font-size: 85%;
	padding: 2px;
}

/* A container panel for toolbars. */
.tsToolbarWidget
{
	border-style:solid;
	border-color:#cccc99;
	background: #ebebd6;
	color: #003366;
	font-weight: normal;
}

/* A container panel for horizontal toolbars placed at the top of a view. */
.tsToolbarWidget-horizontal-north
{
	border-width:0px 0px 1px 0px;
	width: 100%;
	margin: 2px 2px 0px 2px;
	background: #ebebd6 url(../Basic/tsperspectives/images/hToolBar.gif) repeat-x bottom left !important;
}

/* A container panel for horizontal toolbars placed at the bottom of a view. */
.tsToolbarWidget-horizontal-south
{
	border-width:1px 0px 0px 0px;
	width: 100%;
	margin: 0px 2px 2px 2px;
	background: #ebebd6 url(../Basic/tsperspectives/images/hToolBar.gif) repeat-x bottom left;
}

/* A container panel for vertical toolbars placed on the left of a view. */
.tsToolbarWidget-vertical-west
{
	margin: 2px 0px 2px 2px;
	border-width:0px 1px 0px 0px;
	height: 100%;
	padding: 0px;
	float: left;
	background: #ebebd6 url(../Basic/tsperspectives/images/vToolBar.gif) repeat-y top right;
}

/* A container panel for vertical toolbars placed on the right of a view. */
.tsToolbarWidget-vertical-east
{
	margin: 2px 2px 2px 0px;
	border-width:0px 0px 0px 1px;
	padding: 0px;
	height: 100%;
	float: left;
	background: #ebebd6 url(../Basic/tsperspectives/images/vToolBar.gif) repeat-y top right;
}

/* A toolbar. */
.tsToolBar
{
	color: #003366;
	font-weight: normal;
	background: unset;
}

/* A horizontal toolbar. */
.tsToolBar-horizontal
{
	padding: 0px;
	background: transparent;
	width: 100%;
}

/* A horizontal toolbar item. */
.tsToolBar-horizontal .tsToolBarItem
{
	padding: 2px;
	border: 1px solid transparent;
	vertical-align: middle;
	font-weight: normal;
	font-size: 85%;
	background: unset;
}

/* A separator between horizontal toolbar items. */
.tsToolBar-horizontal .tsToolBarSeparator
{
	width: 1px;
	padding: 0px;
	border-left: 1px solid #888888;
	background: white;
}

/* An element contained within a toolbar separator. */
.tsToolBarSeparator .menuSeparatorInner
{
	width: 1px;
	height: 1px;
	background: white;
}

/* A vertical toolbar. */
.tsToolBar-vertical
{
	padding: 0px;
	background: transparent;
	height: 100%;
	float: left;
}

/* A vertical toolbar item. */
.tsToolBar-vertical .tsToolBarItem
{
	padding: 2px;
	border: 1px solid transparent;
	text-align: center;
	font-size: 85%;
	font-weight: normal;
}

/* A separator between vertical toolbar items. */
.tsToolBar-vertical .tsToolBarSeparator
{
	height: 1px;
	padding: 0px;
	border-top: 1px solid #888888;
	background-color: white;
}

/* A selected toolbar item. */
.tsToolBar-horizontal .tsToolBarItem-selected,
.tsToolBar-vertical .tsToolBarItem-selected
{
	border: 1px solid #9d9da1;
}

/* A disabled menu or toolbar item. */
.tsMenuBarItem-disabled,
.tsToolBarItem-disabled
{
	opacity: 0.2;
	filter: alpha(opacity=20);
	cursor: default;
}

/* A selected menu item. */
.tsMenuBarItem-selected
{
	background: #efefef !important;
}

/* An active toolbar item. */
.tsToolBarItem-active
{
	background: #cccc99 !important;
}


/******************************************************************************
 * Tab styles.
 */

/* A tab panel. */
.tsTabPanel
{
	color: #003366;
	font-weight: normal;
}

/* An element within a tab panel. */
.tsTabPanel .tsViewClient
{
	border: 0px;
}

/* The bottom of a tab panel. */
.tsTabPanel .gwt-TabPanelBottom
{
	border-color: #cccc99;
	border-width: 1px;
	padding: 0px;
}

/* The top center a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .tabTopCenter
{
	background: #ebebd6;
}

/* The inner elements within the left and right corners of a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .tabTopLeftInner,
.tsTabPanel .gwt-DecoratedTabBar .tabTopRightInner
{
	width: 3px;
	height: 3px;
}

/* The first tab item in a tab panel header. */
.tsTabPanel .gwt-DecoratedTabBar .gwt-TabBarFirst
{
	width: 0px;
}

/* An item in a tab panel header. */
.tsTabPanel .gwt-DecoratedTabBar .gwt-TabBarItem
{
	margin-left: 3px;
}

/* The left and right sides of a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .tabMiddleLeft,
.tsTabPanel .gwt-DecoratedTabBar .tabMiddleRight
{
	width: 3px;
	background: #ebebd6;
}

/* The center of a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .tabMiddleCenter
{
	padding: 0px 3px 2px 3px;
	background: #ebebd6;
}

/* The top left corner of a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .tabTopLeft
{
	background: url(../Basic/tsperspectives/images/corner.png) no-repeat 0px -55px;
	-background: url(../Basic/tsperspectives/images/corner_ie6.png) no-repeat 0px -55px;
}

/* The top right corner of a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .tabTopRight
{
	background: url(../Basic/tsperspectives/images/corner.png) no-repeat -9px -55px;
	-background: url(../Basic/tsperspectives/images/corner_ie6.png) no-repeat -9px -55px;
}

/* The top center of the selected item within a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .gwt-TabBarItem-selected .tabTopCenter
{
	background: #cccc99;
}

/* The top left corner of the selected item within a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .gwt-TabBarItem-selected .tabTopLeft
{
	background-position: 0px -61px;
}

/* The top right corner of the selected item within a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .gwt-TabBarItem-selected .tabTopRight
{
	background-position: -9px -61px;
}

/* The left and right sides of the selected item within a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .gwt-TabBarItem-selected .tabMiddleLeft,
.tsTabPanel .gwt-DecoratedTabBar .gwt-TabBarItem-selected .tabMiddleRight
{
	background: #cccc99;
}

/* The center of the selected item within a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .gwt-TabBarItem-selected .tabMiddleCenter
{
	background: #cccc99;
}

/* The center of a disabled item within a tab panel. */
.tsTabPanel .gwt-DecoratedTabBar .gwt-TabBarItem-disabled .tabMiddleCenter
{
	color: #efefef;
}

/* A tab layout panel container. */
.tsTabLayoutPanel .gwt-TabLayoutPanelContentContainer
{
	border: 0px;
}

/* A tab layout panel content element. */
.tsTabLayoutPanel .gwt-TabLayoutPanelContent
{
	border: solid 1px #cccc99;
	overflow: hidden;
	padding: 3px;
}

/* A tab layout panel tab. */
.tsTabLayoutPanel .gwt-TabLayoutPanelTab
{
	background: #ebebd6;
	margin-left: 3px;
	padding: 2px 6px;
	cursor: pointer;
	font-weight: normal;
	text-align: center;
}

/* A selected tab layout panel tab. */
.tsTabLayoutPanel .gwt-TabLayoutPanelTab-selected
{
	cursor: default;
	background: #cccc99;
}


/******************************************************************************
 * Search box styles.
 */

/* A toolbar panel containing a search box. */
.tsSearchContainingToolbarPanel
{
	padding-right: 4px;
}

/* A search box. */
.tsSearchBox
{
	background-color : #FFFFFF !important;
	border: 1px solid #b0b09e !important;
	border-radius: 15px !important;
	-moz-border-radius: 15px !important;
	-webkit-border-radius: 15px !important;
	padding: 2px !important;
}

/* An input element within a search box. */
.tsSearchBoxInput
{
	font-family: Arial Unicode MS, Arial, sans-serif;
	font-size: 85%;
	font-weight: normal;
	border: 0px solid #000000;
	outline: none;
	width: 100%;
	height: 14px;
	background-color : transparent;
}

/* A watermark within a search box input element. */
.tsSearchBoxInput-watermark
{
	font-family: Arial Unicode MS, Arial, sans-serif;
	font-size: 85%;
	font-weight: normal;
	border: 0px solid #000000;
	width: 100%;
	height: 14px;
	background-color : transparent;
	color: DarkGray;
}

/* A text edit field within a search box. */
input[type="text"].tsSearchBoxInput,
input[type="text"].tsSearchBoxInput-watermark
{
	border:0px;
	width:100%;
	outline-style:none;
}

/* Special style to remove the Clear field button added by IE10 */
.tsSearchBoxInput::-ms-clear
{
	display: none;
}

/* A popup panel displaying the results of a search. */
.tsSearchPopupPanel
{
	border: 1px solid #b0b09e;
	padding-top: 4px;
	padding-bottom: 4px;
	background-color : #FFFFFF;
	-moz-border-radius: 6px;
	-webkit-border-radius: 6px;
	-khtml-border-radius: 6px;
	border-radius: 6px;
	-webkit-box-shadow: 0px 2px 8px #838383;
	-moz-box-shadow: 0px 2px 8px #838383;
	box-shadow: 0px 2px 8px #838383;
	z-index: 30;
}

/* A scrollbar within a search results popup panel. */
.tsSearchPopupScrollPanel
{
	max-height: 250px;
	z-index: 30;
}

/* A table containing the data within a search results popup panel. */
.tsSearchResultTable
{
	table-layout: fixed;
	width: 100%;
}

/* A table column within a search results popup panel. */
.tsSearchResultTableColumn
{
	table-layout: fixed;
}

/* A table cell within a search results popup panel showing the display text of the
   search results. */
.tsSearchTableDisplayCell
{
	font-family: Arial Unicode MS, Arial, sans-serif;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	font-size: 85%;
	padding-left: 4px;
}

/* A table cell within a search results popup panel showing the category text of the
   search results. */
.tsSearchTableCategoryCell
{
	font-family: Arial Unicode MS, Arial, sans-serif;
	font-size: 85%;
	color: #838383;
	text-align: right;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	display: inline;
	padding-right: 4px;
}

/* A selected table row within a search results popup panel. */
.tsSelectedSearchTableRow
{
	background-color : #bddcff;
	font-family: Arial Unicode MS, Arial, sans-serif;
	font-size: 85%;
	font-weight: normal;
}

/* A table row within a search results popup panel. */
.tsSearchTableRow
{
	background-color : #ffffff;
	font-family: Arial Unicode MS, Arial, sans-serif;
	font-size: 85%;
	font-weight: normal;
}

/* A No Results label shown when a search results popup panel contains no items. */
.tsSearchPopupPanelNoResults
{
	font-family: Arial Unicode MS, Arial, sans-serif;
	font-size: 85%;
	font-weight: normal;
	width: 100%;
	height: 15px;
	text-align: center;
	color: DarkGray;
}


/******************************************************************************
 * Dialog box component styles. Modifications to default GWT Dialog box style.
 */

/* A dialog box. */
.tsDialogBox
{
	box-shadow: 2px 2px 2px #bebebe;
	background: white;
	border: 5px solid #ebebd6;
	border-radius: 5px;
	font-family: Arial Unicode MS,Arial,sans-serif;
	z-index: 10000;
}

/* A title bar in a dialog box. */

.tsDialogBox .Caption,
.tsDialogBox .dialogTopLeft,
.tsDialogBox .dialogTopRight
{
	background: -webkit-linear-gradient(#f6f6ea, #dadab4); /* For Safari 5.1 to 6.0 */
	background: -o-linear-gradient(#f6f6ea, #dadab4); /* For Opera 11.1 to 12.0 */
	background: -moz-linear-gradient(#f6f6ea, #dadab4); /* For Firefox 3.6 to 15 */
	background: linear-gradient(#f6f6ea, #dadab4); /* Standard syntax (must be last) */
	border-bottom: 1px solid #b0b09e;
}

.tsDialogBox .Caption
{
	padding: 2px 4px 2px 4px;
	cursor: default;
	font-size: 85%;
	color: #003366;
}

/* The caption in the title bar in a dialog box. */
.tsDialogBox .tsCaptionLabel
{
	padding: 0px;
	border: 0px;
	font-size: 85%;
	width: 100%;
}

/* The close button in the title bar in a dialog box. */
.tsDialogBox .tsCaptionButton
{
	font-size: 85%;
	background-color: transparent;
	border: 1px solid #b0b09e;;
	padding: 0px;
	cursor: pointer;
}

/* The wrapper around the contents of a dialog box. */
.tsDialogBox .dialogContent
{
	font-size: 85%;
	color: #003366;
}

/* The middle center cell of a dialog box, where the content is located. */
.tsDialogBox .dialogMiddleCenter
{
	padding: 3px;
	background: white;
}

/* The separator between the content and the OK/Cancel buttons in a dialog box. */
.tsDialogBox .tsDialogSeparator
{
	height: 1px;
	padding: 0px;
	border-top: 1px solid #888888;
	background: white;
}

/* A fieldset container for layout and rendering of fields in a dialog box. */
.tsDialogBox fieldset
{
	border: 1px solid #b0b09e;
	padding: 2px;
}

/* Text box, label, and radio button fields in a dialog box. */
.tsDialogPanel .gwt-TextBox,
.tsDialogPanel .gwt-Label,
.tsDialogPanel .gwt-RadioButton
{
	color: #003366;
	font-size: 85%;
	font-weight: normal;
}

/* A radio button label field in a dialog box. */
.tsDialogPanel .gwt-RadioButton label
{
	color: #003366;
	font-size: 100%;
	font-weight: normal;
}

/* A radio button field in a dialog box. */
.tsDialogPanel .gwt-RadioButton
{
	padding-left: 2px;
}

/* A text box field in a dialog box. */
.tsDialogPanel .gwt-TextBox
{
	font-family: Arial Unicode MS, Arial, sans-serif;
	border: 1px solid #b0b09e;
}


/******************************************************************************
 * Push button and related styles.
 */

/* A standard push button. */
.tsPushButton
{
}

/* A button that displays both text and an image icon. */
td.tsIconButtonText
{
	color: #003366;
	font-size: 85%;
	font-weight: normal;
}

/* A container for a field in the Print Setup and Save As Image dialog boxes. */
td.tsCaptionText
{
	color: #003366;
	font-size: 85%;
	font-weight: normal;
}

/* Dialog buttons. */
.tsPushButton-up,
.tsPushButton-up-hovering,
.tsPushButton-up-disabled,
.tsPushButton-down,
.tsPushButton-down-hovering,
.tsPushButton-down-disabled,
.tsIconTextPushButton-up,
.tsIconTextPushButton-up-hovering,
.tsIconTextPushButton-up-disabled,
.tsIconTextPushButton-down,
.tsIconTextPushButton-down-hovering,
.tsIconTextPushButton-down-disabled
{
	margin: 0;
	text-decoration: none;
	background: -webkit-linear-gradient(#f6f6ea, #dadab4); /* For Safari 5.1 to 6.0 */
	background: -o-linear-gradient(#f6f6ea, #dadab4); /* For Opera 11.1 to 12.0 */
	background: -moz-linear-gradient(#f6f6ea, #dadab4); /* For Firefox 3.6 to 15 */
	background: linear-gradient(#f6f6ea, #dadab4); /* Standard syntax (must be last) */
}

/* The html face of dialog buttons. */
.tsPushButton-up .html-face,
.tsPushButton-up-hovering .html-face,
.tsPushButton-up-disabled .html-face,
.tsPushButton-down .html-face,
.tsPushButton-down-hovering .html-face,
.tsPushButton-down-disabled .html-face
{
	color: #003366;
	font-size: 85%;
	font-weight: normal;
	vertical-align: middle;
}

/* Dialog buttons in the up position. */
.tsPushButton-up,
.tsPushButton-up-hovering,
.tsPushButton-up-disabled,
.tsIconTextPushButton-up,
.tsIconTextPushButton-up-hovering,
.tsIconTextPushButton-up-disabled
{
	padding: 1px 3px;
}

/* Dialog buttons in the up position and not hovered or disabled. */
.tsPushButton-up,
.tsIconTextPushButton-up
{
	border: 1px outset #ccc;
	cursor: pointer;
}

/* Dialog buttons in the up position and hovered. */
.tsPushButton-up-hovering,
.tsIconTextPushButton-up-hovering
{
	border: 1px outset;
	border-color: #b0b09e;
	cursor: pointer;
}

/* Dialog buttons in the up position and disabled. */
.tsPushButton-up-disabled,
.tsIconTextPushButton-up-disabled
{
	border: 1px outset #ccc;
	cursor: default;
	opacity: .5;
	filter: alpha(opacity=40);
	zoom: 1;
}

/* Dialog buttons in the down position. */
.tsPushButton-down,
.tsPushButton-down-hovering,
.tsPushButton-down-disabled,
.tsIconTextPushButton-down,
.tsIconTextPushButton-down-hovering,
.tsIconTextPushButton-down-disabled
{
	padding: 2px 2px 0px 4px;
}

/* Dialog buttons in the down position and not hovered or disabled. */
.tsPushButton-down,
.tsIconTextPushButton-down
{
	border: 1px inset #666;
	cursor: pointer;
}

/* Dialog buttons in the down position and hovered. */
.tsPushButton-down-hovering,
.tsIconTextPushButton-down-hovering
{
	border: 1px inset;
	border-color: #b0b09e;
	cursor: pointer;
}

/* Dialog buttons in the down position and disabled. */
.tsPushButton-down-disabled,
.tsIconTextPushButton-down-disabled
{
	border: 1px outset #ccc;
	cursor: default;
	opacity: 0.5;
	filter: alpha(opacity=40);
	zoom: 1;
}


/******************************************************************************
 * GWT style overrides.
 */

/* A GWT splitter. */
.gwt-HorizontalSplitPanel .hsplitter,
.gwt-VerticalSplitPanel .vsplitter
{
	background: #efefef;
}

/* The drag control on a GWT horizontal splitter. */
.gwt-SplitLayoutPanel-HDragger
{
	background-color: #efefef;
}

/* The drag control on a GWT vertical splitter. */
.gwt-SplitLayoutPanel-VDragger
{
	background-color: #efefef;
	color: #003366;
}

/* The default styles applied to all GWT widgets. */
.gwt-HTML
{
	color: #003366;
	font-weight: normal;
	font-size: 85%;
	padding: 0;
}


/******************************************************************************
 * Advanced GWT style overrides.
 */

/* An advanced GWT text box with a button. */
.advanced-TextButtonPanel
{
	border: 1px solid #b0b09e;
	background-color: white;
	padding-left: 3px;
}

/* Selected text on an advanced GWT text box. */
.advanced-TextButtonPanel input[type="text"].selected-value
{
	border: 0px;
	font-family: Arial Unicode MS, Arial, sans-serif;
	font-size: 85%;
	color: #003366;
	padding: 0px;
	margin: 0px;
}

/* A combo box on an advanced GWT text box. */
.advanced-TextButtonPanel .choice-button
{
	width: 14px;
	height: 14px;
	background-color: white;
	border: 0;
	padding: 0px;
}

/* A combo box on an advanced GWT text box in the down state. */
.advanced-TextButtonPanel .choice-button-down
{
	background-color: white;
	border: 0;
}

/* A combo box on an advanced GWT text box in the down state and hovered. */
.advanced-TextButtonPanel .choice-button-down-hovering
{
	background-color: white;
	border: 0;
	cursor: default;
}

/* A table within an advanced GWT text box. */
.advanced-TextButtonPanel table
{
	border: 0;
	padding: 0;
	border-collapse: collapse;
}

/* An advanced GWT scrollable list of items used with the combo box widget. */
.advanced-ListPopupPanel
{
	border: 1px solid #b0b09e;
	background-color: white;
}

/* A selected row within a scrollable list of items. */
.advanced-ListPopupPanel .list .selected-row
{
	background-color: #ccc;
}

/* The list of items within a scrollable list of items. */
.advanced-ListPopupPanel .list
{
	padding: 1px 1px 1px 3px;
}

/* Text and labels within a scrollable list of items. */
.advanced-ListPopupPanel .list .gwt-Label,
.advanced-ListPopupPanel .list .gwt-HTML
{
	font-size: 85%;
	color: #003366;
}

/* An advanced GWT focusable panel. */
.advanced-FocusPanel
{
	padding: 0;
	border: 0;
	outline: none;
}


/******************************************************************************
 * Navigation control styles.
 */

/* A navigation control panel. */
.tsNavigationControl
{
	filter: alpha(opacity=30);
	opacity: 0.45;
	padding: 10px;
	z-index: 20;
}

/* A navigation control panel when the mouse is hovering over it. */
.tsNavigationControl:hover
{
	filter: alpha(opacity=100);
	opacity: 1.0;
	padding: 10px;
	cursor: pointer;
	z-index: 20;
}

/* The scroll button panel within a navigation control panel. */
.tsNavigationControlScrollPanel
{
}

/* The scroll button panel when the mouse is hovering over it. */
.tsNavigationControlScrollPanel:hover
{
}

/* The zoom button panel within a navigation control panel. */
.tsNavigationControlZoomPanel
{
	border-collapse: separate;
	border-spacing: 0px 2px;
}

/* The zoom button panel when the mouse is hovering over it. */
.tsNavigationControlZoomPanel:hover
{
}

/* A navigation control pan to center button. */
.tsNavigationControlPanButton
{
	width: 40px;
	height: 40px;
	background: url("../Basic/tsperspectives/images/navigation/pan.png");
	background-size: 40px 40px;
	background-repeat: no-repeat;

}

.tsNavigationControlPanButton:hover{
	background: url("../Basic/tsperspectives/images/navigation/panHovered.png");
	background-size: 40px 40px;
	background-repeat: no-repeat;
}

/* A navigation control zoom in button. */
.tsNavigationControlZoomInButton
{
	width: 25px;
	height: 25px;
	background: url("../Basic/tsperspectives/images/navigation/zoomIn.png");
	background-size: 25px 25px;
	background-repeat: no-repeat;
}

.tsNavigationControlZoomInButton:hover
{
	background: url("../Basic/tsperspectives/images/navigation/zoomInHovered.png");
	background-size: 25px 25px;
	background-repeat: no-repeat;
}

/* A navigation control zoom out button. */
.tsNavigationControlZoomOutButton
{
	width: 25px;
	height: 25px;
	background: url("../Basic/tsperspectives/images/navigation/zoomOut.png");
	background-size: 25px 25px;
	background-repeat: no-repeat;
}

.tsNavigationControlZoomOutButton:hover
{
	background: url("../Basic/tsperspectives/images/navigation/zoomOutHovered.png");
	background-size: 25px 25px;
	background-repeat: no-repeat;
}

.tsNavigationControlZoomFitButton{
	width: 25px;
	height: 25px;
	background: url("../Basic/tsperspectives/images/navigation/zoomFit.png");
	background-size: 25px 25px;
	background-repeat: no-repeat;
}

.tsNavigationControlZoomFitButton:hover
{
	background: url("../Basic/tsperspectives/images/navigation/zoomFitHovered.png");
	background-size: 25px 25px;
	background-repeat: no-repeat;
}

/* A navigation control pan to center button for IE8. */
.tsNavigationControlPanButtonIE8
{
	width: 40px;
	height: 40px;
	background: url("../Basic/tsperspectives/images/navigation/pan40x40.png");
}

.tsNavigationControlPanButtonIE8:hover{
	background: url("../Basic/tsperspectives/images/navigation/panHovered40x40.png");
}

/* A navigation control zoom in button for IE8 */
.tsNavigationControlZoomInButtonIE8
{
	width: 25px;
	height: 25px;
	background: url("../Basic/tsperspectives/images/navigation/zoomIn25x25.png");
}

.tsNavigationControlZoomInButtonIE8:hover
{
	background: url("../Basic/tsperspectives/images/navigation/zoomInHovered25x25.png");
}

/* A navigation control zoom out button for IE8. */
.tsNavigationControlZoomOutButtonIE8
{
	width: 25px;
	height: 25px;
	background: url("../Basic/tsperspectives/images/navigation/zoomOut25x25.png");
}

.tsNavigationControlZoomOutButtonIE8:hover
{
	background: url("../Basic/tsperspectives/images/navigation/zoomOutHovered25x25.png");
}

/* A navigation control zoom fit button for IE8. */
.tsNavigationControlZoomFitButtonIE8{
	width: 25px;
	height: 25px;
	background: url("../Basic/tsperspectives/images/navigation/zoomFit25x25.png");
}

.tsNavigationControlZoomFitButtonIE8:hover
{
	background: url("../Basic/tsperspectives/images/navigation/zoomFitHovered25x25.png");
}


/******************************************************************************
 * Color picker dialog box styles.
 */

/* A color picker dialog box. */
.tsColorPickerDialog .tsDialogPanel
{
	margin: 1px;
}

/* The top content in a color picker dialog box. */
.tsColorPickerDialog .topContent
{
	height: 230px;
}

/* The tab panel in a color picker dialog box. */
.tsColorPickerDialog .tsTabLayoutPanel
{
	float: left;
	height: 100%;
	width: 285px;
	margin-right: 4px;
}

/* The font used in the tab panel in a color picker dialog box. */
.tsColorPickerDialog .tsTabLayoutPanel .gwt-TabLayoutPanelTab .gwt-HTML
{
	font-size: 100%;
}

/* The swatches panel in a color picker dialog box. */
.tsColorPickerDialog .swatches
{
	height: 100%;
	width: 100%;
}

/* The color swatch in a color picker dialog box. */
.tsColorPickerDialog .colorSwatch
{
	border: 1px solid #666666;
	cursor: pointer;
}

/* The color swatch in a color picker dialog box when hovered. */
.tsColorPickerDialog .colorSwatch:hover
{
	border: 1px solid #000000;
}

/* The palette panel in a color picker dialog box. */
.tsColorPickerDialog .palette
{
	float: left;
	width: 240px;
	outline: none;
	height: 100%;
}

/* A slider in a color picker dialog box. */
.tsColorPickerDialog .slider
{
	float: right;
	width: 28px;
	outline: none;
	height: 100%;
}

/* The right panel in a color picker dialog box. */
.tsColorPickerDialog .rightPanel
{
	float: right;
	height: 100%;
}

/* The preview label in a color picker dialog box. */
.tsColorPickerDialog .labeledPreview
{
	margin: 0 auto 13px;
}

/* The preview text in a color picker dialog box. */
.tsColorPickerDialog .previewText
{
	text-align: center;
	margin-bottom: 2px;
}

/* The preview in a color picker dialog box. */
.tsColorPickerDialog .preview
{
	border: 1px solid black;
	margin: 0 auto;
	height: 30px;
	width: 42px;
}

/* The value editor in a color picker dialog box. */
.tsColorPickerDialog .valueEditor
{
	border-collapse: collapse;
}

/* A table cell in the value editor in a color picker dialog box. */
.tsColorPickerDialog .valueEditor td
{
	padding: 2px 2px 3px 2px;
}

/* The last table cell in the value editor in a color picker dialog box. */
.tsColorPickerDialog .valueEditor .lastHSBRow td
{
	padding-bottom: 13px;
}

/* The input field in the value editor in a color picker dialog box. */
.tsColorPickerDialog .valueEditor input[type="text"]
{
	text-align: right;
	line-height: 15px;
	height: 15px;
}

/* The button panel in a color picker dialog box. */
.tsColorPickerDialog .buttonPanel
{
	float: right;
}

/* A button in a color picker dialog box. */
.tsColorPickerDialog .buttonPanel .tsPushButton
{
	text-align: center;
	width: 40px;
	margin: 0 3px;
}

/* A separator in a color picker dialog box. */
.tsColorPickerDialog .tsDialogSeparator
{
	margin: 6px auto;
}


/******************************************************************************
 * Date picker dialog box styles.
 */

/* A text box in a date picker dialog box. */
.tsDatePickerDialog .gwt-TextBox
{
	text-align: right;
	height: 15px;
	line-height: 15px;
}

/* A two digit text box in a date picker dialog box. */
.tsDatePickerDialog .twoDigitTextbox
{
	width: 1.5em;
}

/* A four digit text box in a date picker dialog box. */
.tsDatePickerDialog .fourDigitTextbox
{
	width: 2.7em;
}

/* The caption in a date picker dialog box. */
.tsDatePickerDialog .captionContent
{
	width: 220px;
}

/* The date panel in a date picker dialog box. */
.tsDatePickerDialog .datePanel
{
	margin: 0 auto 5px;
	width: 95%;
	border-collapse: collapse;
}

/* A table cell in the date panel in a date picker dialog box. */
.tsDatePickerDialog .datePanel td
{
	padding: 0 3px;
}

/* A list box in the date panel in a date picker dialog box. */
.tsDatePickerDialog .datePanel .listBox
{
	font-size: 85%;
}

/* A current date in the date panel in a date picker dialog box. */
.tsDatePickerDialog .datePanel .dateNowButton
{
	width: 16px;
	height: 16px;
	padding: 2px;
}

/* A date picker. */
.tsDatePickerDialog .datePicker
{
	width: 100%;
}

/* The button panel in a date picker dialog box. */
.tsDatePickerDialog .buttonPanel
{
	float: right;
}

/* A button in a date picker dialog box. */
.tsDatePickerDialog .buttonPanel .tsPushButton
{
	margin: 0 3px;
	width: 40px;
	text-align: center;
}

/* A separator in a date picker dialog box. */
.tsDatePickerDialog .tsDialogSeparator {
	margin: 6px 0;
}

/* The time panel in a date picker dialog box. */
.tsDatePickerDialog .timePanel
{
	width: 95%;
	margin: 0 auto 3px;
	border-collapse: collapse;
}

/* A table cell in the time panel in a date picker dialog box. */
.tsDatePickerDialog .timePanel td
{
	padding-bottom: 0;
}

/* A label in the time panel in a date picker dialog box. */
.tsDatePickerDialog .timeLabel
{
	padding-bottom: 2px;
	font-size: 85%;
}

/* A colon separate in a date picker dialog box. */
.tsDatePickerDialog .colonSeparator
{
	margin: 0 4px;
	font-weight: bold;
	font-size: 85%;
}

/* A disabled label in a date picker dialog box. */
.tsDatePickerDialog .disabledLabel
{
	font-size: 100%;
	color: #ff0000;
	padding: 6px;
}

/* The calendar container in a date picker dialog box. */
.tsDatePickerDialog .calendarContainer
{
	overflow: hidden;
	width: 100%;
	height: 185px;
}

/* The GWT date picker in a date picker dialog box. */
.tsDatePickerDialog .gwt-DatePicker
{
	border-color: #CCCC99;
	width: 95%;
	margin: 0 auto;
}

/* Font and padding for week/weekend day and day labels within a date picker. */
.tsDatePickerDialog .datePickerDay,
.tsDatePickerDialog .datePickerWeekdayLabel,
.tsDatePickerDialog .datePickerWeekendLabel
{
	font-size: 100%;
	padding: 2px 3px;
}

/* The Today button in a date picker dialog box. */
.tsDatePickerDialog .datePickerDayIsToday
{
	border: 0;
}

/* The month shown in a date picker dialog box. */
.tsDatePickerDialog td.datePickerMonth
{
	font-size: 100%;
	color: #333;
}

/* Background color for the month selector and week/weekend day labels in a date 
   picker dialog box. */
.tsDatePickerDialog .datePickerMonthSelector,
.tsDatePickerDialog .datePickerWeekdayLabel,
.tsDatePickerDialog .datePickerWeekendLabel
{
	background: #DDDDBB;
}

/* The Next and Previous buttons in a date picker dialog box. */
.tsDatePickerDialog .datePickerPreviousButton,
.tsDatePickerDialog .datePickerNextButton
{
	color: #3a6aad;
	font-size: 120%;
	outline: none;
}

/* Background color for a weekend day in a date picker dialog box. */
.tsDatePickerDialog .datePickerDayIsWeekend
{
	background: #FFFFFF;
}

/* Background color for the selected day in a date picker dialog box. */
.tsDatePickerDialog .datePickerDayIsValue
{
	background: #aaccee;
}

/* Background color for a highlighted day in a date picker dialog box. */
.tsDatePickerDialog .datePickerDayIsHighlighted
{
	background: #F0E68C;
}

/* Background color for a highlighted and selected day in a date picker dialog box. */
.tsDatePickerDialog .datePickerDayIsValueAndHighlighted
{
	background: #bbddd9;
}


/******************************************************************************
 * Tom Sawyer About Box styles.
 */

/* The Tom Sawyer logo within the About Box. */
.tsAboutBoxTomIcon
{
	margin-left: auto;
	margin-right: auto;
}

/* The text within the About Box. */
.tsAboutBoxText
{
	color: #000;
}


/******************************************************************************
 * Integrator component styles.
 */

/* An integrator panel. */
.tsIntegratorsPanel
{
	border-bottom: 1px solid #cccc99;
	border-right: 1px solid #cccc99;
	padding-top:0px;
	padding-bottom:2px;
	padding-right:0px;
	padding-left:0px;
	width: 100%;
}

/* The tree of integrators within a integrator panel. */
.tsIntegratorsTree,
.tsIntegratorsTree .advanced-Grid
{
	table-layout: auto !important;
}

/* The label and text boxes within a JDBC connection dialog box. */
.tsJDBCConnectionPanel .gwt-Label,
.tsJDBCConnectionPanel .gwt-TextBox,
.tsJDBCConnectionPanel .gwt-PasswordTextBox
{
	color: #003366;
	font-size: 85%;
	font-weight: normal;
}

/* The text and password text boxes within a JDBC connection dialog box. */
.tsJDBCConnectionPanel .gwt-TextBox,
.tsJDBCConnectionPanel .gwt-PasswordTextBox
{
	border: 1px solid #b0b09e;
}

/* The container grid for the integrator panel. */
.tsIntegratorsPanel .advanced-Grid
{
	border-collapse: collapse;
	padding: 0px;
	font-weight: normal;
	color: #003366;
	width: 100%;
}

/* GWT list boxes and the file upload widget for the integrator panel. */
.tsIntegratorsPanel .gwt-ListBox,
.tsIntegratorsPanel .gwt-FileUpload
{
	color: #003366;
	font-size: 85%;
	font-weight: normal;
}

/* Default font used in the grid for the integrator panel. */
.tsIntegratorsPanel .advanced-Grid .gwt-HTML
{
	font-size: small;
}

/* The font used for tables in the grid for the integrator panel. */
.tsIntegratorsPanel .advanced-Grid .gwt-Label
{
	font-size: 85%;
}

/* Table cells in the grid for the integrator panel. */
.tsIntegratorsPanel td.active-cell,
.tsIntegratorsPanel td.passive-cell
{
	text-align: left;
	vertical-align: middle;
	white-space: nowrap;
	background-color: transparent;
	font-size: 85%;
	cursor: default;
}

/* Active table cells in the grid for the integrator panel. */
.tsIntegratorsPanel .advanced-Grid .active-cell
{
	background-color: transparent;
	border: 1px red;
	padding: 0;
}

/* Table headers in the grid for the integrator panel. */
.tsIntegratorsPanel .advanced-Grid thead
{
	background: #ebebd6;
}

/* Table header cells in the grid for the integrator panel. */
.tsIntegratorsPanel .advanced-Grid th
{
	padding: 0px 2px;
	background: white;
	font-size: 85%;
	font-weight: normal;
	color: #003366;
}

/* A label within a table header cell in the grid for the integrator panel. */
.tsIntegratorsPanel .advanced-Grid th .gwt-Label
{
	padding: 3px 0;
}

/* A selected row in the grid for the integrator panel. */
.tsIntegratorsPanel .advanced-Grid .selected-row
{
	background-color: #eee;
}

/* Field set for the integrator panel. */
.tsIntegratorsPanel fieldset
{
	border: 1px solid #b0b09e;
	padding: 2px;
}


}